{"ast":null,"code":"var _jsxFileName = \"D:\\\\Minor_Proj\\\\FormVoting\\\\excel\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport * as XLSX from \"xlsx\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [data, setData] = useState([]);\n  const [fileurl, setFileurl] = useState('https://docs.google.com/spreadsheets/d/1CqiPgS-1QINp5jl4A7H3NsJSJF6rLvdNy28K9m_egOY/export?format=xlsx&id=1CqiPgS-1QINp5jl4A7H3NsJSJF6rLvdNy28K9m_egOY');\n  const mapcan = new Map();\n  const [candidatevote, setcandidatevote] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await fetch(fileurl);\n      const data = await response.arrayBuffer();\n      const workbook = XLSX.read(data, {\n        type: \"array\"\n      });\n      const sheetName = workbook.SheetNames[0];\n      const sheet = workbook.Sheets[sheetName];\n      const parsedData = XLSX.utils.sheet_to_json(sheet);\n      for (let i = 0; i < parsedData.length; i++) {\n        if (mapcan[parsedData[i]['Candidate Name']] === undefined) {\n          mapcan.set(parsedData[i]['Candidate Name'], 0);\n        }\n        mapcan.set(parsedData[i]['Candidate Name'], mapcan.get(parsedData[i]['Candidate Name']) + 1);\n      }\n      let lis = [];\n      console.log(mapcan.entries());\n      for (let [key, value] of mapcan.entries()) {\n        lis.push([key, value]);\n      }\n      console.log(lis);\n      setcandidatevote(lis);\n      setData(parsedData);\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: data.length > 0 && /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Candidate Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Vote Count\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: candidatevote.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: item[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item[1]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this)]\n        }, item[0], true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"/6UQznDhP1hlgrEGRDe68YKxCNg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","XLSX","jsxDEV","_jsxDEV","App","_s","data","setData","fileurl","setFileurl","mapcan","Map","candidatevote","setcandidatevote","fetchData","response","fetch","arrayBuffer","workbook","read","type","sheetName","SheetNames","sheet","Sheets","parsedData","utils","sheet_to_json","i","length","undefined","set","get","lis","console","log","entries","key","value","push","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","_c","$RefreshReg$"],"sources":["D:/Minor_Proj/FormVoting/excel/src/App.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport * as XLSX from \"xlsx\";\r\n\r\nimport './App.css';\r\n\r\nfunction App() {\r\n\r\n  const [data, setData] = useState([]);\r\n  const [fileurl, setFileurl] = useState('https://docs.google.com/spreadsheets/d/1CqiPgS-1QINp5jl4A7H3NsJSJF6rLvdNy28K9m_egOY/export?format=xlsx&id=1CqiPgS-1QINp5jl4A7H3NsJSJF6rLvdNy28K9m_egOY');\r\n  const mapcan = new Map();\r\n  const [candidatevote,setcandidatevote] = useState([]);\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await fetch(fileurl);\r\n      const data = await response.arrayBuffer();\r\n      const workbook = XLSX.read(data, { type: \"array\" });\r\n      const sheetName = workbook.SheetNames[0];\r\n      const sheet = workbook.Sheets[sheetName];\r\n      const parsedData = XLSX.utils.sheet_to_json(sheet);\r\n      for(let i=0;i<parsedData.length;i++){\r\n        if(mapcan[parsedData[i]['Candidate Name']]===undefined){\r\n          mapcan.set(parsedData[i]['Candidate Name'],0);\r\n        }\r\n        mapcan.set(parsedData[i]['Candidate Name'],mapcan.get(parsedData[i]['Candidate Name'])+1);\r\n      }\r\n      let lis=[]\r\n      console.log(mapcan.entries());\r\n      for (let [key, value] of mapcan.entries()) {\r\n        lis.push([key,value]);\r\n      }\r\n      console.log(lis);\r\n      setcandidatevote(lis);\r\n      setData(parsedData);\r\n    };\r\n    fetchData();\r\n  },[]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {data.length > 0 && (\r\n        <table className=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Candidate Name</th>\r\n              <th>Vote Count</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {candidatevote.map((item) => (\r\n              <tr key={item[0]}>\r\n                <td>{item[0]}</td>\r\n                <td>{item[1]}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}